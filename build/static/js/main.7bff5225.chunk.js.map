{"version":3,"sources":["components/Header.js","components/StatesCode.js","components/Field.js","components/DataTable.js","components/CsvUploader.js","App.js","index.js"],"names":["Header","StatesCode","full","short","Field","data","fieldData","rowIndex","fieldIndex","fieldHeader","headers","fieldnewData","trim","fieldName","value","test","Number","isInteger","newValue","floatVal","parseFloat","replace","toFixed","isNaN","expirationDateValid","Date","parse","now","arrayOfValues","split","errorsCount","newArrayOfValues","map","element","trimedElement","toLowerCase","elementIndex","findIndex","item","join","hasChildrenValid","validateField","className","DataTable","isRowDuplicated","row","fieldDuplicatedIndex","tableRow","index","result","generateKey","Math","floor","random","toString","field","idx","CsvUploader","useState","csvData","setCsvData","loading","setLoading","error","setError","isFileValid","counter","forEach","cssClass","onFileLoaded","fileInfo","validFileType","name","pop","validFileData","setTimeout","onError","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yOAEe,SAASA,IACpB,OACI,iCACI,6C,2BCLCC,EAAa,CACtB,CACIC,KAAM,UACNC,MAAO,MAEX,CACID,KAAM,SACNC,MAAO,MAEX,CACID,KAAM,UACNC,MAAO,MAEX,CACID,KAAM,WACNC,MAAO,MAEX,CACID,KAAM,aACNC,MAAO,MAEX,CACID,KAAM,WACNC,MAAO,MAEX,CACID,KAAM,cACNC,MAAO,MAEX,CACID,KAAM,WACNC,MAAO,MAEX,CACID,KAAM,uBACNC,MAAO,MAEX,CACID,KAAM,UACNC,MAAO,MAEX,CACID,KAAM,UACNC,MAAO,MAEX,CACID,KAAM,SACNC,MAAO,MAEX,CACID,KAAM,QACNC,MAAO,MAEX,CACID,KAAM,WACNC,MAAO,MAEX,CACID,KAAM,UACNC,MAAO,MAEX,CACID,KAAM,OACNC,MAAO,MAEX,CACID,KAAM,SACNC,MAAO,MAEX,CACID,KAAM,WACNC,MAAO,MAEX,CACID,KAAM,YACNC,MAAO,MAEX,CACID,KAAM,QACNC,MAAO,MAEX,CACID,KAAM,WACNC,MAAO,MAEX,CACID,KAAM,gBACNC,MAAO,MAEX,CACID,KAAM,WACNC,MAAO,MAEX,CACID,KAAM,YACNC,MAAO,MAEX,CACID,KAAM,cACNC,MAAO,MAEX,CACID,KAAM,WACNC,MAAO,MAEX,CACID,KAAM,UACNC,MAAO,MAEX,CACID,KAAM,WACNC,MAAO,MAEX,CACID,KAAM,SACNC,MAAO,MAEX,CACID,KAAM,gBACNC,MAAO,MAEX,CACID,KAAM,aACNC,MAAO,MAEX,CACID,KAAM,aACNC,MAAO,MAEX,CACID,KAAM,WACNC,MAAO,MAEX,CACID,KAAM,iBACNC,MAAO,MAEX,CACID,KAAM,eACNC,MAAO,MAEX,CACID,KAAM,OACNC,MAAO,MAEX,CACID,KAAM,WACNC,MAAO,MAEX,CACID,KAAM,SACNC,MAAO,MAEX,CACID,KAAM,eACNC,MAAO,MAEX,CACID,KAAM,eACNC,MAAO,MAEX,CACID,KAAM,iBACNC,MAAO,MAEX,CACID,KAAM,eACNC,MAAO,MAEX,CACID,KAAM,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","file":"static/js/main.7bff5225.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport default function Header() { \r\n    return (\r\n        <header>\r\n            <h2>Employees</h2>\r\n        </header>\r\n    )\r\n}","export const StatesCode = [\r\n    {\r\n        full: 'Alabama',\r\n        short: 'AL'\r\n    },\r\n    {\r\n        full: 'Alaska',\r\n        short: 'AK'\r\n    },\r\n    {\r\n        full: 'Arizona',\r\n        short: 'AZ'\r\n    },\r\n    {\r\n        full: 'Arkansas',\r\n        short: 'AR'\r\n    },\r\n    {\r\n        full: 'California',\r\n        short: 'CA'\r\n    },\r\n    {\r\n        full: 'Colorado',\r\n        short: 'CO'\r\n    },\r\n    {\r\n        full: 'Connecticut',\r\n        short: 'CT'\r\n    },\r\n    {\r\n        full: 'Delaware',\r\n        short: 'DE'\r\n    },\r\n    {\r\n        full: 'District of Columbia',\r\n        short: 'DC'\r\n    },\r\n    {\r\n        full: 'Florida',\r\n        short: 'FL'\r\n    },\r\n    {\r\n        full: 'Georgia',\r\n        short: 'GA'\r\n    },\r\n    {\r\n        full: 'Hawaii',\r\n        short: 'HI'\r\n    },\r\n    {\r\n        full: 'Idaho',\r\n        short: 'ID'\r\n    },\r\n    {\r\n        full: 'Illinois',\r\n        short: 'IL'\r\n    },\r\n    {\r\n        full: 'Indiana',\r\n        short: 'IN'\r\n    },\r\n    {\r\n        full: 'Iowa',\r\n        short: 'IA'\r\n    },\r\n    {\r\n        full: 'Kansas',\r\n        short: 'KS'\r\n    },\r\n    {\r\n        full: 'Kentucky',\r\n        short: 'KY'\r\n    },\r\n    {\r\n        full: 'Louisiana',\r\n        short: 'LA'\r\n    },\r\n    {\r\n        full: 'Maine',\r\n        short: 'ME'\r\n    },\r\n    {\r\n        full: 'Maryland',\r\n        short: 'MD'\r\n    },\r\n    {\r\n        full: 'Massachusetts',\r\n        short: 'MA'\r\n    },\r\n    {\r\n        full: 'Michigan',\r\n        short: 'MI'\r\n    },\r\n    {\r\n        full: 'Minnesota',\r\n        short: 'MN'\r\n    },\r\n    {\r\n        full: 'Mississippi',\r\n        short: 'MS'\r\n    },\r\n    {\r\n        full: 'Missouri',\r\n        short: 'MO'\r\n    },\r\n    {\r\n        full: 'Montana',\r\n        short: 'MT'\r\n    },\r\n    {\r\n        full: 'Nebraska',\r\n        short: 'NE'\r\n    },\r\n    {\r\n        full: 'Nevada',\r\n        short: 'NV'\r\n    },\r\n    {\r\n        full: 'New Hampshire',\r\n        short: 'NH'\r\n    },\r\n    {\r\n        full: 'New Jersey',\r\n        short: 'NJ'\r\n    },\r\n    {\r\n        full: 'New Mexico',\r\n        short: 'NM'\r\n    },\r\n    {\r\n        full: 'New York',\r\n        short: 'NY'\r\n    },\r\n    {\r\n        full: 'North Carolina',\r\n        short: 'NC'\r\n    },\r\n    {\r\n        full: 'North Dakota',\r\n        short: 'ND'\r\n    },\r\n    {\r\n        full: 'Ohio',\r\n        short: 'OH'\r\n    },\r\n    {\r\n        full: 'Oklahoma',\r\n        short: 'OK'\r\n    },\r\n    {\r\n        full: 'Oregon',\r\n        short: 'OR'\r\n    },\r\n    {\r\n        full: 'Pennsylvania',\r\n        short: 'PA'\r\n    },\r\n    {\r\n        full: 'Rhode Island',\r\n        short: 'RI'\r\n    },\r\n    {\r\n        full: 'South Carolina',\r\n        short: 'SC'\r\n    },\r\n    {\r\n        full: 'South Dakota',\r\n        short: 'SD'\r\n    },\r\n    {\r\n        full: 'Tennessee',\r\n        short: 'TN'\r\n    },\r\n    {\r\n        full: 'Texas',\r\n        short: 'TX'\r\n    },\r\n    {\r\n        full: 'Utah',\r\n        short: 'UT'\r\n    },\r\n    {\r\n        full: 'Vermont',\r\n        short: 'VT'\r\n    },\r\n    {\r\n        full: 'Virginia',\r\n        short: 'VA'\r\n    },\r\n    {\r\n        full: 'Washington',\r\n        short: 'WA'\r\n    },\r\n    {\r\n        full: 'West Virginia',\r\n        short: 'WV'\r\n    },\r\n    {\r\n        full: 'Wisconsin',\r\n        short: 'WI'\r\n    },\r\n    {\r\n        full: 'Wyoming',\r\n        short: 'WY'\r\n    }\r\n]","import React from 'react'\r\nimport { StatesCode } from './StatesCode'\r\n\r\nexport default function Field({ data, fieldData, rowIndex, fieldIndex, headers }) {\r\n    const fieldHeader = headers[fieldIndex + 1]\r\n    let fieldnewData = fieldData.trim()\r\n\r\n    const validateField = (fieldName, value) => {    \r\n        switch(fieldName) {\r\n            case 'phone':\r\n                const phoneValid = (/^(\\+1|1)?(\\d{10})$/g).test(value)\r\n                return phoneValid\r\n            case 'email':\r\n                const emailValid = (/^([\\w.%+-]+)@([\\w-]+\\.)+([\\w]{2,})$/i).test(value)\r\n                return emailValid\r\n            case 'age':\r\n                const ageValid = Number.isInteger(+value) && value >= 21\r\n                return ageValid\r\n            case 'experience':\r\n                const experienceValid = value < data[rowIndex][3] - 21 && value >= 0\r\n                return experienceValid\r\n            case 'yearly income':\r\n                let newValue = value\r\n                if (value === \"\") newValue = \"0.00\"\r\n                const floatVal = parseFloat(newValue.replace(/\\s/g, '').replace(/,/g, '.')).toFixed(2)\r\n                if (!Number.isNaN(floatVal)) {\r\n                    fieldnewData = floatVal\r\n                }\r\n                const yearlyIncomeValid = 1000000 >= floatVal && 0 <= floatVal\r\n                return yearlyIncomeValid\r\n            case 'expiration date':\r\n                let expirationDateValid = false\r\n                if ((/^\\d{4}-(0?[1-9]|1[012])-(0?[1-9]|[12][0-9]|3[01])$/).test(value)) {\r\n                    expirationDateValid = Date.parse(value) - Date.now() > 0\r\n                } else if ((/^(0?[1-9]|1[012])\\/(0?[1-9]|[12][0-9]|3[01])\\/\\d{4}$/).test(value)) {\r\n                    expirationDateValid = Date.parse(value) - Date.now() > 0\r\n                }      \r\n                return expirationDateValid\r\n            case 'license states':\r\n                let arrayOfValues = value.split(\"|\")\r\n                let errorsCount = 0\r\n                const newArrayOfValues = arrayOfValues.map(element => {\r\n                    const trimedElement = element.toLowerCase().trim()\r\n                    const elementIndex = StatesCode.findIndex(item => {\r\n                        return item.full.toLowerCase() === trimedElement || item.short.toLowerCase() === trimedElement\r\n                    })\r\n                    if (elementIndex !== -1) {\r\n                        return element = StatesCode[elementIndex].short\r\n                    } else {\r\n                        errorsCount++\r\n                        return element\r\n                    }\r\n                })\r\n\r\n                fieldnewData = newArrayOfValues.join(\",\")\r\n\r\n                const licenseStatesValid = errorsCount === 0\r\n                return licenseStatesValid\r\n            case 'has children':\r\n                let hasChildrenValid = false\r\n                if (value === \"\") {\r\n                    hasChildrenValid = true\r\n                    fieldnewData = \"FALSE\"\r\n                } else if (value.replace(/^\\s+|\\s+$/g, \"\").toLowerCase() === \"true\") {\r\n                    hasChildrenValid = true\r\n                } else if (value.replace(/^\\s+|\\s+$/g, \"\").toLowerCase() === \"false\") {\r\n                    hasChildrenValid = true\r\n                }\r\n                return hasChildrenValid\r\n            case 'license number':\r\n                const licenseNumberValid = (/^([A-Za-z0-9]{6})$/gi).test(value)\r\n                return licenseNumberValid\r\n            default:\r\n                return true\r\n        }\r\n    }\r\n\r\n    const isFieldValid = validateField(fieldHeader.toLowerCase(), fieldnewData)\r\n\r\n    if (!isFieldValid) {\r\n        return <td className=\"red\">{fieldnewData}</td>\r\n    }\r\n\r\n    return <td>{fieldnewData}</td>\r\n}","import React from 'react'\r\nimport Field from './Field'\r\n\r\nexport default function DataTable({ data }) {\r\n    const headers = [\r\n        \"ID\",\r\n        \"Full Name\",\r\n        \"Phone\",\r\n        \"Email\",\r\n        \"Age\",\r\n        \"Experience\",\r\n        \"Yearly Income\",\r\n        \"Has children\",\r\n        \"License states\",\r\n        \"Expiration date\",\r\n        \"License number\",\r\n        \"Duplicate with\"\r\n    ]\r\n\r\n    const isRowDuplicated = (row, rowIndex) => {\r\n        const fieldDuplicatedIndex = data.findIndex((tableRow, index) => {\r\n            let result = false\r\n            if (index !== rowIndex) {\r\n                if (row[1].toLowerCase().replace('+', '') === tableRow[1].toLowerCase().replace('+', '')) {\r\n                    result = true\r\n                } else if (row[2].toLowerCase() === tableRow[2].toLowerCase()) {\r\n                    result = true\r\n                }\r\n            }\r\n            return result\r\n        })\r\n\r\n        if (fieldDuplicatedIndex !== -1) {\r\n            return fieldDuplicatedIndex + 1\r\n        }\r\n        return null\r\n    }\r\n\r\n    const generateKey = () => {      \r\n        return Math.floor(Math.random() * 100000000).toString()\r\n    }\r\n\r\n    return (\r\n        <div className=\"table\">\r\n            <table>\r\n                <tbody>\r\n                    <tr>\r\n                        {\r\n                            headers.map((item) =>\r\n                                <th key={generateKey()}>{item}</th>\r\n                            )\r\n                        }\r\n                    </tr>\r\n                    {\r\n                        data? (\r\n                            data.map((row, index) =>\r\n                                <tr key={generateKey()}>\r\n                                    <td>{index + 1}</td>\r\n                                    {\r\n                                        row.map((field, idx) =>\r\n                                            <Field\r\n                                                data={data}\r\n                                                fieldData={field}\r\n                                                rowIndex={index}\r\n                                                fieldIndex={idx}\r\n                                                headers={headers}                                                  \r\n                                                key={generateKey()}\r\n                                            />\r\n                                        )\r\n                                    }\r\n                                    <td>{isRowDuplicated(row, index)}</td>\r\n                                </tr>\r\n                            )\r\n                        ) : null                \r\n                    }\r\n                    </tbody>\r\n            </table>\r\n           \r\n        </div>\r\n    )\r\n}","import React, { useState } from 'react'\r\nimport CSVReader from 'react-csv-reader'\r\nimport DataTable from './DataTable'\r\n\r\nexport default function CsvUploader() {\r\n    const [csvData, setCsvData] = useState()\r\n    const [loading, setLoading] = useState(false)\r\n    const [error, setError] = useState(\"\")\r\n\r\n    const handleData = (data, fileInfo) => {\r\n        const validFileType = fileInfo.name.split('.').pop() === 'csv'\r\n        const validFileData = isFileValid(data)\r\n\r\n        setLoading(true)\r\n        if (!validFileType || !validFileData) {\r\n            setError(\"File is not correct.\")\r\n        } else {\r\n            setCsvData(data)\r\n        }\r\n        setTimeout(() => {\r\n            setLoading(false)\r\n        }, 1000)\r\n\t}\r\n\r\n\tconst handleError = () => {\r\n\t\tsetError(\"Something is wrong.\")\r\n\t}\r\n\r\n    const isFileValid = (data) => {\r\n        let counter = 0\r\n\r\n        data.forEach(row => \r\n            row.forEach((field, index) => {\r\n                if (index < 3 && field === \"\") counter++\r\n            })\r\n        )\r\n\r\n        return counter === 0 ? true : false\r\n    }\r\n\r\n    if (loading) return <p>Loading...</p>\r\n    return (\r\n        <div className=\"work-space\">\r\n            <p>You can import employees from your csv file.</p>\r\n            <CSVReader\r\n                cssClass=\"csv-reader-input\"\r\n                onFileLoaded={handleData}\r\n                onError={handleError}\r\n            />\r\n            {csvData ? (\r\n\t\t\t\t\t<DataTable data={csvData} />\r\n\t\t\t\t) : (\r\n                    error && (\r\n                        <div className=\"error\">\r\n                            {\r\n                                error && <p>{error}</p>\r\n                            }\r\n                        </div>\r\n                    )\r\n\t\t\t\t)}\r\n        </div>\r\n    )\r\n}","import './App.css'\nimport Header from './components/Header'\nimport CsvUploader from './components/CsvUploader'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header />\n      <CsvUploader />\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)"],"sourceRoot":""}